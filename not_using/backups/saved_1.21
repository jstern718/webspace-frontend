  const [userState, setUserState] = useState({ isLoading: false, currentUser: null });
  const [token, setToken] = useState(localStorage.getItem(TOKEN_KEY));

//   console.log("user......", userState.currentUser);
//   console.log("token......", token);

/**
   * useEffect activated when token changes
   * Sets WebspaceApi.token
   * gets username by decoding payload
   * call Webspace.getUser passing in username
   */
    // useEffect(function onTokenChange() {
    //     // if (token === null) {
    //     //     localStorage.removeItem(TOKEN_KEY);
    //     //     setUserState({ isLoading: false, currentUser: null });
    //     // }
    //     // else {
    //         WebspaceApi.token = token;
    //         localStorage.setItem(TOKEN_KEY, token);
    //         async function getUserInfo() {
    //             try {
    //                 const { username } = jwtDecode(token);
    //                 console.log("username", username);
    //                 // const user = await WebspaceApi.getUserLogin(username);
    //                 // console.log("user", user);
    //                 // setUserState({ isLoading: false, currentUser: user });
    //             }
    //             catch (err) {
    //                 console.error(err);
    //             }
    //         }
    //         getUserInfo();
    //     // }
    // }, [token]);



